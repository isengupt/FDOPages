"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var uniforms_1 = require("uniforms");
var ListItemField_1 = tslib_1.__importDefault(require("./ListItemField"));
var ListAddField_1 = tslib_1.__importDefault(require("./ListAddField"));
var List = function (_a) {
    var children = _a.children, className = _a.className, disabled = _a.disabled, error = _a.error, errorMessage = _a.errorMessage, initialCount = _a.initialCount, itemProps = _a.itemProps, label = _a.label, name = _a.name, required = _a.required, showInlineError = _a.showInlineError, value = _a.value, props = tslib_1.__rest(_a, ["children", "className", "disabled", "error", "errorMessage", "initialCount", "itemProps", "label", "name", "required", "showInlineError", "value"]);
    return (react_1.default.createElement("div", tslib_1.__assign({ className: classnames_1.default('ui', className, { disabled: disabled }, 'grouped fitted fields list') }, uniforms_1.filterDOMProps(props)),
        label && (react_1.default.createElement("div", { className: classnames_1.default({ error: error, required: required }, 'field item') },
            react_1.default.createElement("label", { className: "left floated" }, label),
            react_1.default.createElement(ListAddField_1.default, { name: name + ".$", initialCount: initialCount, className: "right floated" }))),
        label && react_1.default.createElement("div", { className: "ui fitted hidden clearing horizontal divider" }),
        !!(error && showInlineError) && (react_1.default.createElement("div", { className: "ui red basic label" }, errorMessage)),
        children
            ? value.map(function (item, index) {
                return react_1.Children.map(children, function (child) {
                    return react_1.default.cloneElement(child, {
                        key: index,
                        label: null,
                        name: uniforms_1.joinName(name, child.props.name && child.props.name.replace('$', index)),
                    });
                });
            })
            : value.map(function (item, index) { return (react_1.default.createElement(ListItemField_1.default, tslib_1.__assign({ key: index, label: null, name: uniforms_1.joinName(name, index) }, itemProps))); })));
};
exports.default = uniforms_1.connectField(List, {
    ensureValue: false,
    includeInChain: false,
});
